{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://F%3A/12a_21/Project/geoquest/src/app/FirebaseDB/firebase.config.js"],"sourcesContent":["import { getApps, initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\r\n    authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID\r\n};\r\n\r\n\r\n// Initialize Firebase\r\nif (!getApps().length) {\r\n    initializeApp(firebaseConfig);\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app); "],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAKY;AAPZ;AACA;AACA;;;;AAEA,wCAAwC;AACxC,mEAAmE;AACnE,MAAM,iBAAiB;IACnB,QAAQ,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,4BAA4B;IAChD,YAAY,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,gCAAgC;IACxD,WAAW,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,+BAA+B;IACtD,eAAe,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,mCAAmC;IAC9D,mBAAmB,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,wCAAwC;IACvE,OAAO,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,2BAA2B;AAClD;AAGA,sBAAsB;AACtB,IAAI,CAAC,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,EAAE;IACnB,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE;AAClB;AAEA,MAAM,MAAM,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE;AACnB,MAAM,OAAO,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,sKAAA,CAAA,eAAY,AAAD,EAAE"}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file://F%3A/12a_21/Project/geoquest/src/components/navbar.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\nimport React, { useState } from \"react\";\r\n\r\n\r\nconst Navbar: React.FC = () => {\r\n  return (\r\n      <nav className=\"bg-[#457B9D] text-white px-6 py-4\">\r\n        \r\n        <div className=\"container mx-auto flex justify-between items-center\">\r\n\r\n          <span className=\"text-2xl font-bold\">\r\n            <Link href=\"#\">\r\n              <img className=\"max-w-14\" src=\"./logo.png\" alt=\"GeoQuest\" />\r\n            </Link>\r\n          </span>\r\n\r\n          <div className=\"flex space-x-36\">\r\n            <Link href=\"/game\" className=\"text-xl font-bold hover:underline\"> Играй </Link> \r\n            <Link href=\"/leaderboard\" className=\"text-xl font-bold hover:underline\"> Класация </Link> \r\n            <Link href=\"/about-us\" className=\"text-xl font-bold hover:underline\"> За нас </Link> \r\n          </div>\r\n\r\n          <div className=\"flex justify-end\">\r\n            <Link href=\"/login\" className=\"text-xl font-bold hover:underline\"> Влез </Link> \r\n            <Link href=\"/register\" className=\"text-xl font-bold hover:underline\"> Регистрирай се </Link> \r\n          </div>\r\n\r\n          <div>\r\n            <Link href=\"#\"> \r\n              <Image className=\"max-w-14\" src=\"/user.png\" alt=\"Account button\" width={56} height={20}/>\r\n            </Link>\r\n          </div>\r\n\r\n        </div>\r\n      </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;"],"names":[],"mappings":";;;;AAEA;AACe;AAMM;AAE2B;AAXhD;;AAEA,OAAO,UAAU,YAAY;;AAK7B,MAAM,SAAmB;IACvB,qBACI,QAAC;QAAI,WAAU;kBAEb,cAAA,QAAC;YAAI,WAAU;;8BAEb,QAAC;oBAAK,WAAU;8BACd,cAAA,QAAC;wBAAK,MAAK;kCACT,cAAA,QAAC;4BAAI,WAAU;4BAAW,KAAI;4BAAa,KAAI;;;;;;;;;;;;;;;;8BAInD,QAAC;oBAAI,WAAU;;sCACb,QAAC;4BAAK,MAAK;4BAAQ,WAAU;sCAAoC;;;;;;sCACjE,QAAC;4BAAK,MAAK;4BAAe,WAAU;sCAAoC;;;;;;sCACxE,QAAC;4BAAK,MAAK;4BAAY,WAAU;sCAAoC;;;;;;;;;;;;8BAGvE,QAAC;oBAAI,WAAU;;sCACb,QAAC;4BAAK,MAAK;4BAAS,WAAU;sCAAoC;;;;;;sCAClE,QAAC;4BAAK,MAAK;4BAAY,WAAU;sCAAoC;;;;;;;;;;;;8BAGvE,QAAC;8BACC,cAAA,QAAC;wBAAK,MAAK;kCACT,cAAA,QAAC;4BAAM,WAAU;4BAAW,KAAI;4BAAY,KAAI;4BAAiB,OAAO;4BAAI,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOlG;KAhCM;uCAkCS"}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file://F%3A/12a_21/Project/geoquest/src/components/main-content.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ninterface CustomComponentProps {\r\n  content: React.ReactNode; \r\n}\r\n\r\n\r\nconst MainContent: React.FC<CustomComponentProps> = ({ content }) => {\r\n  return (\r\n    <main className=\"flex flex-col items-center justify-center flex-grow bg-gray-100 py-20\">\r\n      {content}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default MainContent;"],"names":[],"mappings":";;;;;AAOA,MAAM,cAA8C,CAAC,EAAE,OAAO,EAAE;IAC9D,qBACE,6LAAC;QAAK,WAAU;kBACb;;;;;;AAGP;KANM;uCAQS"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file://F%3A/12a_21/Project/geoquest/src/components/footer.tsx"],"sourcesContent":["export default function Footer() {\r\n  \r\n    return (\r\n      <footer className=\"bg-[#457B9D] text-white text-center p-4\">\r\n        ©Всички права запазени\r\n      </footer>\r\n    );\r\n  }"],"names":[],"mappings":";;;;;AAAe,SAAS;IAEpB,qBACE,6LAAC;QAAO,WAAU;kBAA0C;;;;;;AAIhE;KAPsB"}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":["file://F%3A/12a_21/Project/geoquest/src/app/FirebaseDB/AuthContext.tsx"],"sourcesContent":["/*\r\nimport React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport {\r\n    createUserWithEmailAndPassword,\r\n    onAuthStateChanged,\r\n    signInWithEmailAndPassword,\r\n    signOut\r\n} from 'firebase/auth';\r\nimport { auth } from './firebase.config';\r\n\r\n// User data type interface\r\ninterface UserType {\r\n    email: string | null;\r\n    uid: string | null;\r\n}\r\n\r\n// Create auth context\r\nconst AuthContext = createContext({});\r\n\r\n// Make auth context available across the app by exporting it\r\nexport const useAuth = () => useContext<any>(AuthContext);\r\n\r\n// Create the auth context provider\r\nexport const AuthContextProvider = ({\r\n    children\r\n}: {\r\n    children: React.ReactNode;\r\n}) => {\r\n    // Define the constants for the user and loading state\r\n    const [user, setUser] = useState<UserType>({ email: null, uid: null });\r\n    const [loading, setLoading] = useState<Boolean>(true);\r\n\r\n    // Update the state depending on auth\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n            if (user) {\r\n                setUser({\r\n                    email: user.email,\r\n                    uid: user.uid\r\n                });\r\n            } else {\r\n                setUser({ email: null, uid: null });\r\n            }\r\n        });\r\n\r\n        setLoading(false);\r\n\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    // Sign up the user\r\n    const signUp = (email: string, password: string) => {\r\n        return createUserWithEmailAndPassword(auth, email, password);\r\n    };\r\n\r\n    // Login the user\r\n    const logIn = (email: string, password: string) => {\r\n        return signInWithEmailAndPassword(auth, email, password);\r\n    };\r\n\r\n    // Logout the user\r\n    const logOut = async () => {\r\n        setUser({ email: null, uid: null });\r\n        return await signOut(auth);\r\n    };\r\n\r\n    // Wrap the children with the context provider\r\n    return (\r\n        <AuthContext.Provider value={{ user, signUp, logIn, logOut }}>\r\n            {loading ? null : children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n*/\r\n\r\nimport { auth, db } from './firebase.config';\r\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, updateProfile } from 'firebase/auth';\r\nimport { setDoc, doc, collection, query, where, getDocs, Timestamp } from 'firebase/firestore'; // Import Firestore functions\r\nimport { getDoc } from \"firebase/firestore\";\r\n\r\nexport const registerWithEmail = async (email: string, password: string, username: string, nickname: string, role: string = \"user\") => {\r\n  const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n\r\n  // Update the profile with the username in Firebase Auth\r\n  await updateProfile(userCredential.user, { displayName: username });\r\n\r\n  // If the email is a specific admin email, assign the \"admin\" role\r\n  const isAdmin = email === \"petiopetkov20a@gmail.com\"; // Replace with your admin's email\r\n  const userRole = isAdmin ? \"admin\" : role; // Set role to \"admin\" if condition matches\r\n\r\n  // Save the user’s details in Firestore with the role (default to \"user\")\r\n  await setDoc(doc(db, 'users', userCredential.user.uid), {\r\n    username,\r\n    email,\r\n    createdAt: new Date(),\r\n    role: userRole, // Store the role (either \"user\" or \"admin\")\r\n  });\r\n\r\n  \r\n  // Return the updated user with displayName\r\n  return userCredential.user;\r\n};\r\n\r\nexport const loginWithUsernameOrEmail = async (identifier: string, password: string) => {\r\n  let email = identifier;\r\n\r\n  // Check if the identifier is a username (not an email)\r\n  if (!identifier.includes('@')) {\r\n    // Query Firestore to find the email associated with the username\r\n    const usersRef = collection(db, 'users');\r\n    const q = query(usersRef, where('username', '==', identifier));\r\n    const querySnapshot = await getDocs(q);\r\n\r\n    if (querySnapshot.empty) {\r\n      throw new Error(\"Username not found\");\r\n    }\r\n\r\n    // Assuming username is unique, get the email from the first matched document\r\n    email = querySnapshot.docs[0].data().email;\r\n  }\r\n\r\n  // Proceed to login with the found email and provided password\r\n  return signInWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const logout = async () => {\r\n  try {\r\n    await signOut(auth);\r\n    console.log('User signed out');\r\n  } catch (error) {\r\n    console.error('Error signing out:', error);\r\n  }\r\n};\r\n\r\nexport const getUserRole = async (uid: string) => {\r\n  const userDocRef = doc(db, 'users', uid);\r\n  const docSnap = await getDoc(userDocRef);\r\n  \r\n  if (docSnap.exists()) {\r\n    return docSnap.data().role;  // Return the role (e.g., \"user\" or \"admin\")\r\n  } else {\r\n    throw new Error(\"User not found\");\r\n  }\r\n};\r\n\r\n\r\n\r\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;;;;;;AAEA;AACA;AACA,iVAAgG,6BAA6B;AAD7H;AAAA;AACA;AADA;AAAA;;;;;AAIO,MAAM,oBAAoB,OAAO,OAAe,UAAkB,UAAkB,UAAkB,OAAe,MAAM;IAChI,MAAM,iBAAiB,MAAM,CAAA,GAAA,iQAAA,CAAA,iCAA8B,AAAD,EAAE,iJAAA,CAAA,OAAI,EAAE,OAAO;IAEzE,wDAAwD;IACxD,MAAM,CAAA,GAAA,gPAAA,CAAA,gBAAa,AAAD,EAAE,eAAe,IAAI,EAAE;QAAE,aAAa;IAAS;IAEjE,kEAAkE;IAClE,MAAM,UAAU,UAAU,4BAA4B,kCAAkC;IACxF,MAAM,WAAW,UAAU,UAAU,MAAM,2CAA2C;IAEtF,yEAAyE;IACzE,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,iJAAA,CAAA,KAAE,EAAE,SAAS,eAAe,IAAI,CAAC,GAAG,GAAG;QACtD;QACA;QACA,WAAW,IAAI;QACf,MAAM;IACR;IAGA,2CAA2C;IAC3C,OAAO,eAAe,IAAI;AAC5B;AAEO,MAAM,2BAA2B,OAAO,YAAoB;IACjE,IAAI,QAAQ;IAEZ,uDAAuD;IACvD,IAAI,CAAC,WAAW,QAAQ,CAAC,MAAM;QAC7B,iEAAiE;QACjE,MAAM,WAAW,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,iJAAA,CAAA,KAAE,EAAE;QAChC,MAAM,IAAI,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,UAAU,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,YAAY,MAAM;QAClD,MAAM,gBAAgB,MAAM,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE;QAEpC,IAAI,cAAc,KAAK,EAAE;YACvB,MAAM,IAAI,MAAM;QAClB;QAEA,6EAA6E;QAC7E,QAAQ,cAAc,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,KAAK;IAC5C;IAEA,8DAA8D;IAC9D,OAAO,CAAA,GAAA,6PAAA,CAAA,6BAA0B,AAAD,EAAE,iJAAA,CAAA,OAAI,EAAE,OAAO;AACjD;AAEO,MAAM,SAAS;IACpB,IAAI;QACF,MAAM,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE,iJAAA,CAAA,OAAI;QAClB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sBAAsB;IACtC;AACF;AAEO,MAAM,cAAc,OAAO;IAChC,MAAM,aAAa,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,iJAAA,CAAA,KAAE,EAAE,SAAS;IACpC,MAAM,UAAU,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE;IAE7B,IAAI,QAAQ,MAAM,IAAI;QACpB,OAAO,QAAQ,IAAI,GAAG,IAAI,EAAG,4CAA4C;IAC3E,OAAO;QACL,MAAM,IAAI,MAAM;IAClB;AACF"}},
    {"offset": {"line": 402, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 408, "column": 0}, "map": {"version":3,"sources":["file://F%3A/12a_21/Project/geoquest/src/app/login/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport Navbar from \"@/components/navbar\";\r\nimport MainContent from \"@/components/main-content\";\r\nimport Footer from \"@/components/footer\";\r\nimport GameQuestion from \"@/components/game-question\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function LoginForm() {\r\n    const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n    const handleOptionSelect = (selectedOption: string) => {\r\n        console.log(\"Избран отговор:\", selectedOption);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Navbar/>\r\n            <MainContent \r\n                content={\r\n                    <div className=\"bg-gray-100 p-6 rounded-md shadow-md w-full max-w-md mx-auto\">\r\n                        <h2 className=\"text-center text-xl font-bold mb-6\">Влизане в профил</h2>\r\n\r\n                        <form>\r\n                            <div className=\"mb-4\">\r\n                            <label htmlFor=\"usernameOrEmail\" className=\"block mb-1 text-sm font-medium\">Потребителско име или имейл</label>\r\n                  \r\n                            \r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"usernameOrEmail\"\r\n                                className=\"w-full border border-gray-300 rounded-md p-2\"\r\n                                placeholder=\"Въведете потребителско име или имейл\"\r\n                            />\r\n                            </div>\r\n\r\n                            <div className=\"mb-4 relative\">\r\n                            <label htmlFor=\"password\" className=\"block mb-1 text-sm font-medium\">Парола</label>\r\n                            \r\n                            <input\r\n                                type={passwordVisible ? 'text' : 'password'}\r\n                                id=\"password\"\r\n                                className=\"w-full border border-gray-300 rounded-md p-2\"\r\n                                placeholder=\"Въведете парола\"\r\n                            />\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-500\"\r\n                                onClick={() => setPasswordVisible(!passwordVisible)}\r\n                            >\r\n                                👁️\r\n                            </button>\r\n                            </div>\r\n\r\n                            <button\r\n                            type=\"submit\"\r\n                            className=\"w-full bg-blue-600 text-white rounded-md p-2 font-medium hover:bg-blue-700 transition\"\r\n                            >\r\n                            Вход\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                }/>\r\n            <Footer/>\r\n        </>\r\n    );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;;;AANA;;;;;AAQe,SAAS;;IACpB,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvD,MAAM,qBAAqB,CAAC;QACxB,QAAQ,GAAG,CAAC,mBAAmB;IACnC;IAEA,qBACI;;0BACI,6LAAC,+HAAA,CAAA,UAAM;;;;;0BACP,6LAAC,wIAAA,CAAA,UAAW;gBACR,uBACI,6LAAC;oBAAI,WAAU;;sCACX,6LAAC;4BAAG,WAAU;sCAAqC;;;;;;sCAEnD,6LAAC;;8CACG,6LAAC;oCAAI,WAAU;;sDACf,6LAAC;4CAAM,SAAQ;4CAAkB,WAAU;sDAAiC;;;;;;sDAG5E,6LAAC;4CACG,MAAK;4CACL,IAAG;4CACH,WAAU;4CACV,aAAY;;;;;;;;;;;;8CAIhB,6LAAC;oCAAI,WAAU;;sDACf,6LAAC;4CAAM,SAAQ;4CAAW,WAAU;sDAAiC;;;;;;sDAErE,6LAAC;4CACG,MAAM,kBAAkB,SAAS;4CACjC,IAAG;4CACH,WAAU;4CACV,aAAY;;;;;;sDAEhB,6LAAC;4CACG,MAAK;4CACL,WAAU;4CACV,SAAS,IAAM,mBAAmB,CAAC;sDACtC;;;;;;;;;;;;8CAKD,6LAAC;oCACD,MAAK;oCACL,WAAU;8CACT;;;;;;;;;;;;;;;;;;;;;;;0BAMjB,6LAAC,+HAAA,CAAA,UAAM;;;;;;;AAGnB;GA1DwB;KAAA"}},
    {"offset": {"line": 557, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}