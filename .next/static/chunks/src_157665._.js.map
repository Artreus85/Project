{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://F%3A/12a_21/class%20Software%20Develompent/TeamProject/geoquest/src/app/FirebaseDB/firebase.config.js"],"sourcesContent":["import { getApps, initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAvmVBXtxxbpsjLI0mSvEJOcsJLG_WbpM8\",\r\n    authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID\r\n};\r\n\r\n\r\n// Initialize Firebase\r\nif (!getApps().length) {\r\n    initializeApp(firebaseConfig);\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app); "],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAMgB;AARhB;AACA;AACA;;;;AAEA,wCAAwC;AACxC,mEAAmE;AACnE,MAAM,iBAAiB;IACnB,QAAQ;IACR,YAAY,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,gCAAgC;IACxD,WAAW,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,+BAA+B;IACtD,eAAe,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,mCAAmC;IAC9D,mBAAmB,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,wCAAwC;IACvE,OAAO,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,2BAA2B;AAClD;AAGA,sBAAsB;AACtB,IAAI,CAAC,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,EAAE;IACnB,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE;AAClB;AAEA,MAAM,MAAM,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE;AACnB,MAAM,OAAO,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,sKAAA,CAAA,eAAY,AAAD,EAAE"}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file://F%3A/12a_21/class%20Software%20Develompent/TeamProject/geoquest/src/components/navbar.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { auth } from \"@/app/FirebaseDB/firebase.config\";// Assuming you have Firebase initialized in a file called firebaseConfig\r\nimport { useRouter } from 'next/navigation'; // You can use this to redirect after logging out\r\nimport Link from 'next/link'; // Import Link from Next.js\r\n\r\nconst Navbar: React.FC = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [isDropdownOpen, setDropdownOpen] = useState(false);\r\n  const router = useRouter();\r\n\r\n  // Check if the user is logged in using Firebase auth\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setIsLoggedIn(user ? true : false); // If user is logged in, set isLoggedIn to true\r\n    });\r\n\r\n    return () => unsubscribe(); // Cleanup on unmount\r\n  }, []);\r\n\r\n  // Function to log out the user\r\n  const handleLogout = async () => {\r\n    try {\r\n      await auth.signOut(); // Sign out the user\r\n      setIsLoggedIn(false); // Update the state\r\n      router.push(\"/login\"); // Redirect to login page (optional)\r\n    } catch (error) {\r\n      console.error(\"Error signing out: \", error); // Handle errors\r\n    }\r\n  };\r\n\r\n  const toggleDropdown = () => setDropdownOpen(!isDropdownOpen);\r\n  const closeDropdown = () => setDropdownOpen(false);\r\n\r\n  return (\r\n    <nav className=\"bg-[#457B9D] text-white px-6 py-4\">\r\n      <div className=\"container mx-auto flex justify-between items-center\">\r\n        <span className=\"text-2xl font-bold\">\r\n          <Link href=\"#\">\r\n            <img className=\"max-w-14\" src=\"./geoquest_logo.png\" alt=\"GeoQuest\" />\r\n          </Link>\r\n        </span>\r\n\r\n        {/* Navigation Links */}\r\n        <div className=\"flex space-x-36\">\r\n          <Link href=\"/game\" className=\"text-xl font-bold hover:underline\"> Играй </Link>\r\n          <Link href=\"/leaderboard\" className=\"text-xl font-bold hover:underline\"> Класация </Link>\r\n          <Link href=\"/about-us\" className=\"text-xl font-bold hover:underline\"> За нас </Link>\r\n        </div>\r\n\r\n        {/* Profile Dropdown */}\r\n        <div className=\"relative\">\r\n          <button\r\n            onClick={toggleDropdown}\r\n            className=\"flex items-center focus:outline-none transition duration-300\"\r\n          >\r\n            <img\r\n              src={isLoggedIn ? \"/navbar_logged_account_menu_icon.png\" : \"./navbar_unlogged_account_menu_icon.png\"}\r\n              alt=\"Account menu button\"\r\n              width={56}\r\n              height={56}\r\n              className=\"max-w-10\"\r\n            />\r\n          </button>\r\n\r\n          {isDropdownOpen && (\r\n            <div\r\n              className=\"absolute right-0 mt-2 w-48 bg-[#FFF9F5] text-[#1D3557] rounded-lg shadow-lg overflow-hidden z-10\"\r\n              onMouseLeave={closeDropdown}\r\n            >\r\n              {isLoggedIn ? (\r\n                <button\r\n                  onClick={handleLogout}\r\n                  className=\"block w-full text-left px-4 py-3 text-lg font-semibold hover:bg-[#A8DADC] hover:text-[#457B9D] transition duration-300\"\r\n                >\r\n                  Изход\r\n                </button>\r\n              ) : (\r\n                <div>\r\n                  <Link href=\"/login\" className=\"block px-4 py-3 text-lg font-semibold hover:bg-[#A8DADC] hover:text-[#457B9D] transition duration-300\">\r\n                      Вход\r\n                  </Link>\r\n\r\n                  <Link href=\"/register\" className=\"block px-4 py-3 text-lg font-semibold hover:bg-[#A8DADC] hover:text-[#457B9D] transition duration-300\">\r\n                      Регистрация\r\n                  </Link>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\n\r\n\r\n/*\r\n\"use client\"\r\n\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\nimport React, { useState } from \"react\";\r\n\r\n\r\nconst Navbar: React.FC = () => {\r\n  return (\r\n      <nav className=\"bg-[#457B9D] text-white px-6 py-4\">\r\n        \r\n        <div className=\"container mx-auto flex justify-between items-center\">\r\n\r\n          <span className=\"text-2xl font-bold\">\r\n            <Link href=\"#\">\r\n              <img className=\"max-w-14\" src=\"./logo.png\" alt=\"GeoQuest\" />\r\n            </Link>\r\n          </span>\r\n\r\n          <div className=\"flex space-x-36\">\r\n            <Link href=\"/game\" className=\"text-xl font-bold hover:underline\"> Играй </Link> \r\n            <Link href=\"/leaderboard\" className=\"text-xl font-bold hover:underline\"> Класация </Link> \r\n            <Link href=\"/about-us\" className=\"text-xl font-bold hover:underline\"> За нас </Link> \r\n          </div>\r\n\r\n          <div className=\"flex justify-end\">\r\n            <Link href=\"/login\" className=\"text-xl font-bold hover:underline\"> Влез </Link> \r\n            <Link href=\"/register\" className=\"text-xl font-bold hover:underline\"> Регистрирай се </Link> \r\n          </div>\r\n\r\n          <div>\r\n            <Link href=\"#\"> \r\n              <Image className=\"max-w-14\" src=\"/user.png\" alt=\"Account button\" width={56} height={20}/>\r\n            </Link>\r\n          </div>\r\n\r\n        </div>\r\n      </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n*/"],"names":[],"mappings":";;;;AAEA;AACA,2PAAwD,yEAAyE;AACjI,yOAA6C,iDAAiD;AAC9F,6NAA8B,2BAA2B;;;AALzD;;;;;AAOA,MAAM,SAAmB;;IACvB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,gBAAgB,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,qDAAqD;IACrD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;4BAAE;YACR,MAAM,cAAc,iJAAA,CAAA,OAAI,CAAC,kBAAkB;gDAAC,CAAC;oBAC3C,cAAc,OAAO,OAAO,QAAQ,+CAA+C;gBACrF;;YAEA;oCAAO,IAAM;oCAAe,qBAAqB;QACnD;2BAAG,EAAE;IAEL,+BAA+B;IAC/B,MAAM,eAAe;QACnB,IAAI;YACF,MAAM,iJAAA,CAAA,OAAI,CAAC,OAAO,IAAI,oBAAoB;YAC1C,cAAc,QAAQ,mBAAmB;YACzC,OAAO,IAAI,CAAC,WAAW,oCAAoC;QAC7D,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,uBAAuB,QAAQ,gBAAgB;QAC/D;IACF;IAEA,MAAM,iBAAiB,IAAM,gBAAgB,CAAC;IAC9C,MAAM,gBAAgB,IAAM,gBAAgB;IAE5C,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAK,WAAU;8BACd,cAAA,6LAAC,+HAAA,CAAA,UAAI;wBAAC,MAAK;kCACT,cAAA,6LAAC;4BAAI,WAAU;4BAAW,KAAI;4BAAsB,KAAI;;;;;;;;;;;;;;;;8BAK5D,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,+HAAA,CAAA,UAAI;4BAAC,MAAK;4BAAQ,WAAU;sCAAoC;;;;;;sCACjE,6LAAC,+HAAA,CAAA,UAAI;4BAAC,MAAK;4BAAe,WAAU;sCAAoC;;;;;;sCACxE,6LAAC,+HAAA,CAAA,UAAI;4BAAC,MAAK;4BAAY,WAAU;sCAAoC;;;;;;;;;;;;8BAIvE,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BACC,SAAS;4BACT,WAAU;sCAEV,cAAA,6LAAC;gCACC,KAAK,aAAa,yCAAyC;gCAC3D,KAAI;gCACJ,OAAO;gCACP,QAAQ;gCACR,WAAU;;;;;;;;;;;wBAIb,gCACC,6LAAC;4BACC,WAAU;4BACV,cAAc;sCAEb,2BACC,6LAAC;gCACC,SAAS;gCACT,WAAU;0CACX;;;;;qDAID,6LAAC;;kDACC,6LAAC,+HAAA,CAAA,UAAI;wCAAC,MAAK;wCAAS,WAAU;kDAAwG;;;;;;kDAItI,6LAAC,+HAAA,CAAA,UAAI;wCAAC,MAAK;wCAAY,WAAU;kDAAwG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAW3J;GAxFM;;QAGW,qIAAA,CAAA,YAAS;;;KAHpB;uCA0FS;;;;;;CAIf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA"}},
    {"offset": {"line": 293, "column": 3}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["file://F%3A/12a_21/class%20Software%20Develompent/TeamProject/geoquest/src/components/main-content.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ninterface CustomComponentProps {\r\n  content: React.ReactNode; \r\n}\r\n\r\n\r\nconst MainContent: React.FC<CustomComponentProps> = ({ content }) => {\r\n  return (\r\n    <main className=\"flex flex-col items-center justify-center flex-grow bg-gray-100 py-20\">\r\n      {content}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default MainContent;"],"names":[],"mappings":";;;;;AAOA,MAAM,cAA8C,CAAC,EAAE,OAAO,EAAE;IAC9D,qBACE,6LAAC;QAAK,WAAU;kBACb;;;;;;AAGP;KANM;uCAQS"}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 327, "column": 0}, "map": {"version":3,"sources":["file://F%3A/12a_21/class%20Software%20Develompent/TeamProject/geoquest/src/components/footer.tsx"],"sourcesContent":["export default function Footer() {\r\n  \r\n    return (\r\n      <footer className=\"bg-[#457B9D] text-white text-center p-4\">\r\n        ©Всички права запазени\r\n      </footer>\r\n    );\r\n  }"],"names":[],"mappings":";;;;;AAAe,SAAS;IAEpB,qBACE,6LAAC;QAAO,WAAU;kBAA0C;;;;;;AAIhE;KAPsB"}},
    {"offset": {"line": 348, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":["file://F%3A/12a_21/class%20Software%20Develompent/TeamProject/geoquest/src/components/game-question.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from \"react\";\r\nimport Image from \"next/image\";\r\nimport { Question } from \"@/app/game/page\";\r\n\r\ninterface QuizQuestionProps {\r\n  //Question: Question;\r\n  imageSrc: string;\r\n  question: string;\r\n  options: string[];\r\n  onOptionSelect: (selectedOption: string) => void;\r\n  selectedAnswer: string | null;\r\n  isAnswerSelected: boolean;\r\n  showResult: boolean;\r\n  correctAnswer: string;\r\n}\r\n\r\nconst GameQuestion: React.FC<QuizQuestionProps> = ({\r\n  imageSrc,\r\n  question,\r\n  options,\r\n  onOptionSelect,\r\n  selectedAnswer,\r\n  isAnswerSelected,\r\n  showResult,\r\n  correctAnswer\r\n}) => {\r\n  return (\r\n    <div className=\"flex flex-col text-black items-center bg-white p-6 rounded-lg shadow-lg max-w-md mx-auto\">\r\n      <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">{question}</h2>\r\n\r\n      <div className=\"relative w-full h-52 mb-4\">\r\n        <img\r\n          src={imageSrc}\r\n          alt=\"Quiz image\"\r\n          className=\"object-cover rounded\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"w-full\">\r\n        {options.map((option, index) => (\r\n          <button\r\n            key={index}\r\n            className={`w-full py-2 px-4 mb-2 text-left border border-gray-300 rounded hover:bg-gray-100 transition ${\r\n              selectedAnswer === option\r\n                ? selectedAnswer === option\r\n                  ? \"bg-blue-200\"\r\n                  : \"bg-red-200\"\r\n                : \"\"\r\n            }`}\r\n            onClick={() => onOptionSelect(option)}\r\n            disabled={isAnswerSelected} // Блокираме възможността за промяна след избор\r\n          >\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameQuestion;\r\n\r\n/*\r\n\"use client\";\r\n\r\nimport React from \"react\";\r\nimport Image from \"next/image\"; \r\n\r\n\r\ninterface QuizQuestionProps {\r\n  imageSrc: string;\r\n  question: string;\r\n  options: string[];\r\n\r\n  onOptionSelect: (selectedOption: string) => void;\r\n}\r\n\r\nconst GameQuestion: React.FC<QuizQuestionProps> = ({\r\n  imageSrc,\r\n  question,\r\n  options,\r\n  onOptionSelect,\r\n}) => {\r\n  return (\r\n    <div className=\"flex flex-col items-center bg-white p-6 rounded-lg shadow-lg max-w-md mx-auto\">\r\n\r\n      <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">{question}</h2>\r\n\r\n      <div className=\"relative w-full h-52 mb-4\">\r\n        <Image src={imageSrc} alt=\"Quiz image\" fill className=\"object-cover rounded\"/>\r\n      </div>\r\n\r\n      <div className=\"w-full\">\r\n        {\r\n            options.map((option, index) => (\r\n                <button\r\n                    key={index}\r\n                    className=\"w-full py-2 px-4 mb-2 text-left bg-white border border-gray-300 rounded hover:bg-gray-100 transition\"\r\n                    onClick={() => onOptionSelect(option)}\r\n                > {option} </button>\r\n            ))\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameQuestion;\r\n*/"],"names":[],"mappings":";;;;AAAA;;AAkBA,MAAM,eAA4C,CAAC,EACjD,QAAQ,EACR,QAAQ,EACR,OAAO,EACP,cAAc,EACd,cAAc,EACd,gBAAgB,EAChB,UAAU,EACV,aAAa,EACd;IACC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA4C;;;;;;0BAE1D,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBACC,KAAK;oBACL,KAAI;oBACJ,WAAU;;;;;;;;;;;0BAId,6LAAC;gBAAI,WAAU;0BACZ,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,6LAAC;wBAEC,WAAW,CAAC,4FAA4F,EACtG,mBAAmB,SACf,mBAAmB,SACjB,gBACA,eACF,IACJ;wBACF,SAAS,IAAM,eAAe;wBAC9B,UAAU;kCAET;uBAXI;;;;;;;;;;;;;;;;AAiBjB;KA1CM;uCA4CS;;;;;;CAEf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA"}},
    {"offset": {"line": 465, "column": 3}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 471, "column": 0}, "map": {"version":3,"sources":["file://F%3A/12a_21/class%20Software%20Develompent/TeamProject/geoquest/src/app/game/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport Navbar from \"@/components/navbar\";\r\nimport MainContent from \"@/components/main-content\";\r\nimport Footer from \"@/components/footer\";\r\nimport GameQuestion from \"@/components/game-question\";\r\n\r\nexport class Question {\r\n    questionUID: string;\r\n    mainQuestion: string;\r\n    mainQuestionOptions: string[];\r\n    mainQuestionCorrectAnswer: string;\r\n\r\n    subQuestions: string[];\r\n    subQuestionsOptions: string[][];\r\n    subQuestionsCorrectAnswers: string[];\r\n\r\n    imageURL: string;\r\n\r\n    constructor(aMainQuestion: string, aMainQuestionOptions: string[], aMainQuestionCorrectAnswer: string, aSubQuestions: string[], aSubQuestionsOptions: string[][], aSubQuestionsCorrectAnswers: string[], aImageURL: string) {\r\n        this.questionUID = GenerateQuestionUID();\r\n        \r\n        this.mainQuestion = aMainQuestion;\r\n        this.mainQuestionOptions = aMainQuestionOptions;\r\n        this.mainQuestionCorrectAnswer = aMainQuestionCorrectAnswer;\r\n\r\n        this.subQuestions = aSubQuestions;\r\n        this.subQuestionsOptions = aSubQuestionsOptions;\r\n        this.subQuestionsCorrectAnswers = aSubQuestionsCorrectAnswers;\r\n\r\n        this.imageURL = aImageURL;\r\n    }\r\n}\r\n\r\nlet GeoQuestQuestions: Question[] = []\r\n\r\nfunction GenerateQuestionUID() {\r\n    return \"question-\" + GeoQuestQuestions.length;\r\n}\r\n\r\nfunction AddQuestion(\r\n    mainQuestion: string, \r\n    mainQuestionOptions: string[], \r\n    mainQuestionCorrectAnswer: string,\r\n\r\n    subQuestions: string[],\r\n    subQuestionsOptions: string[][],\r\n    subQuestionsCorrectAnswers: string[],\r\n\r\n    imageURL: string\r\n) {\r\n    GeoQuestQuestions.push(new Question(mainQuestion, mainQuestionOptions, mainQuestionCorrectAnswer, subQuestions, subQuestionsOptions, subQuestionsCorrectAnswers, imageURL));\r\n    \r\n    console.log(GeoQuestQuestions[GeoQuestQuestions.length - 1].questionUID + \"has just been added to the GeoQuest questions successfully.\");\r\n}\r\n\r\nfunction DeleteQuestion(delQuestionUID: string) {\r\n    const questionIndexToDelete = GeoQuestQuestions.findIndex(question => question.questionUID === delQuestionUID);\r\n\r\n    if (questionIndexToDelete !== -1) {\r\n        GeoQuestQuestions.splice(questionIndexToDelete, 1);\r\n    }\r\n}\r\n\r\nfunction InitQuestions() {\r\n    AddQuestion(\"Къде се намира обектът от снимката?\", \r\n                   [\"Германия\", \"Италия\", \"Франция\"],\r\n                   \"Франция\", \r\n                   \r\n                   [\"Каква е основната причина за построяването на Айфеловата кула?\", \r\n                    \"Колко време е отнело построяването на кулата?\", \r\n                    \"Какво е било предназначението на кулата след изтичането на първоначалния ѝ договор?\"], \r\n                    [\r\n                      [\"За Световното изложение през 1889 г.\", \r\n                       \"За отбелязване на победа във война\", \r\n                       \"За научни експерименти\"], \r\n\r\n                      [\"2 години\", \r\n                       \"5 години\", \r\n                       \"3 години\"], \r\n\r\n                      [\"Да бъде демонтирана\", \r\n                       \"Да се използва за жилищни нужди\", \r\n                       \"Да се превърне в паметник на инженерството\"]], \r\n                       \r\n                      [\"За Световното изложение през 1889 г.\", \r\n                       \"2 години\", \r\n                       \"Да бъде демонтирана\"], \r\n                       \r\n                       \"https://drive.google.com/file/d/1aHlD8tNuvgJkzz_9LgYJp-8on2xEuJsA/view?usp=drive_link\"\r\n                );\r\n\r\n  AddQuestion(\"Къде се намира обектът от снимката?\", \r\n                   [\"Германия\", \"Италия\", \"Франция\"],\r\n                   \"Франция\", \r\n                   \r\n                   [\"Каква е основната причина за построяването на Айфеловата кула?\", \r\n                    \"Колко време е отнело построяването на кулата?\", \r\n                    \"Какво е било предназначението на кулата след изтичането на първоначалния ѝ договор?\"], \r\n                    [\r\n                      [\"За Световното изложение през 1889 г.\", \r\n                       \"За отбелязване на победа във война\", \r\n                       \"За научни експерименти\"], \r\n\r\n                      [\"2 години\", \r\n                       \"5 години\", \r\n                       \"3 години\"], \r\n\r\n                      [\"Да бъде демонтирана\", \r\n                       \"Да се използва за жилищни нужди\", \r\n                       \"Да се превърне в паметник на инженерството\"]], \r\n                       \r\n                      [\"За Световното изложение през 1889 г.\", \r\n                       \"2 години\", \r\n                       \"Да бъде демонтирана\"], \r\n                       \r\n                       \"https://drive.google.com/file/d/1aHlD8tNuvgJkzz_9LgYJp-8on2xEuJsA/view?usp=drive_link\"\r\n  );\r\n\r\n              console.log(\"Length: \" + GeoQuestQuestions.length);\r\n\r\n              GeoQuestQuestions.splice(GeoQuestQuestions.length - 1, 1);\r\n              GeoQuestQuestions.splice(GeoQuestQuestions.length - 1, 1);\r\n\r\n              console.log(\"Delted two items, length: \" + GeoQuestQuestions.length);\r\n}\r\n\r\nexport default function Game() {\r\n    const gameQuestions = [\r\n        {\r\n            mainQuestion: \"\",\r\n            mainQuestionOptions: [\"\", \"\", \"\"],\r\n            mainQuestionCorrectAnswer: \"\",\r\n\r\n            subQuestions: [\"?\", \"?\", \"?\"],\r\n            subQuestionOptions: [[\"\", \"\", \"\"], [\"\", \"\", \"\"], [\"\", \"\", \"\"]],\r\n            subQuestionsCorrectAnswers: [\"\", \"\", \"\"],\r\n        }\r\n    ]\r\n\r\n  const questions = [\r\n    {\r\n      question: \"Къде се намира обектът от снимката?\",\r\n      imageSrc: \"/game-question-images/testImage1.jpg\",\r\n      options: [\"В сервиза\", \"На магистралата\", \"В Тракия\"],\r\n      correctAnswer: \"На магистралата\",\r\n    },\r\n    {\r\n      question: \"Какъв е цветът на небето?\",\r\n      imageSrc: \"/game-question-images/testImage2.jpg\",\r\n      options: [\"Син\", \"Червен\", \"Зелен\"],\r\n      correctAnswer: \"Син\",\r\n    },\r\n    // Можете да добавите още въпроси тук\r\n  ];\r\n\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState<string | null>(null);\r\n  const [isAnswerSelected, setIsAnswerSelected] = useState(false);\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  const currentQuestion = GeoQuestQuestions[currentQuestionIndex];\r\n\r\n  // Функция за избор на отговор\r\n  const handleOptionSelect = (selectedOption: string) => {\r\n    if (!showResult) {\r\n      setSelectedAnswer(selectedOption); // Избиране на отговор\r\n      setIsAnswerSelected(true); // Активиране на бутона \"Продължи\"\r\n    }\r\n  };\r\n\r\n  // Функция за натискане на \"Продължи\"\r\n  const handleSubmitAnswer = () => {\r\n    setShowResult(true); // Показваме резултата\r\n  };\r\n\r\n  // Функция за преминаване към следващ въпрос\r\n  const handleNextQuestion = () => {\r\n    setIsAnswerSelected(false); // Нулиране на избора\r\n    setShowResult(false); // Скриване на резултата\r\n    setSelectedAnswer(null); // Нулиране на избора на отговор\r\n    setCurrentQuestionIndex((prevIndex) => (prevIndex + 1) % GeoQuestQuestions.length); // Преминаване към следващия въпрос\r\n  };\r\n\r\n  const handleNextSubQuestion = () => {\r\n\r\n  };\r\n\r\n  InitQuestions();\r\n\r\n  let message: string = currentQuestion.mainQuestion + \"########################\";\r\n  console.log(message);\r\n  console.log(\"Length: \" + GeoQuestQuestions.length);\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <MainContent\r\n        content={\r\n          <main className=\"flex text-black flex-col items-center justify-center flex-grow bg-gray-100 py-20 pt-1\">\r\n            <div className=\"bg-white shadow-lg rounded-lg p-8 max-w-10x w-full\">\r\n              <h1 className=\"text-3xl font-bold text-center mb-6\">Игра</h1>\r\n\r\n              <GameQuestion\r\n                question={currentQuestion.mainQuestion}\r\n                imageSrc={currentQuestion.imageURL}\r\n                options={currentQuestion.mainQuestionOptions}\r\n                onOptionSelect={handleOptionSelect}\r\n                selectedAnswer={selectedAnswer}\r\n                isAnswerSelected={isAnswerSelected}\r\n                showResult={showResult} // Подаваме информация дали резултатът е показан\r\n                correctAnswer={currentQuestion.mainQuestionCorrectAnswer} // Подаваме правилния отговор\r\n              />\r\n              {/* Бутонът \"Продължи\" е активен само ако е избран отговор */}\r\n              {!showResult && \r\n                (\r\n                    <div className=\"flex justify-center mt-6\">\r\n                        <button onClick={handleSubmitAnswer} disabled={!isAnswerSelected} className={`px-6 py-2 text-white rounded ${isAnswerSelected ? \"bg-blue-500\" : \"bg-gray-300\"} `}>\r\n                            Продължи\r\n                        </button>\r\n                    </div>\r\n                )\r\n              }\r\n\r\n              {/* Резултати след натискане на \"Продължи\" */}\r\n              {showResult && \r\n                (\r\n                    <div className=\"mt-4 text-center\">\r\n                        <p>Избран отговор: {selectedAnswer}</p>\r\n\r\n                        <p className={selectedAnswer === currentQuestion.mainQuestionCorrectAnswer ? \"text-green-600\" : \"text-red-600\"}>\r\n                            {selectedAnswer === currentQuestion.mainQuestionCorrectAnswer ? \"Правилен отговор!\" : \"Неправилен отговор.\"}\r\n                        </p>\r\n\r\n                        <div className=\"flex justify-center mt-6\">\r\n                            <button onClick={handleNextQuestion} className=\"px-6 py-2 bg-green-500 text-white rounded\">\r\n                                Следващ въпрос\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n              }\r\n            </div>\r\n          </main>\r\n        }\r\n      />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\n/*\r\n\"use client\"\r\n\r\nimport Navbar from \"@/components/navbar\";\r\nimport MainContent from \"@/components/main-content\";\r\nimport Footer from \"@/components/footer\";\r\nimport GameQuestion from \"@/components/game-question\";\r\n\r\nexport default function Game() {\r\n    const handleOptionSelect = (selectedOption: string) => {\r\n        console.log(\"Избран отговор:\", selectedOption);\r\n    };\r\n\r\n    \r\n    return (\r\n        <>\r\n            <Navbar/>\r\n            <MainContent \r\n                content={\r\n                    <main className=\"flex flex-col items-center justify-center flex-grow bg-gray-100 py-20 pt-1\">\r\n                        <div className=\"bg-white shadow-lg rounded-lg p-8 max-w-10x w-full\">\r\n                            <h1 className=\"text-3xl font-bold text-center mb-6\">Игра</h1>\r\n\r\n                            <GameQuestion\r\n                                question=\"Къде се намира обектът от снимката?\"\r\n                                imageSrc=\"/game-question-images/testImage1.jpg\" // Path to your image\r\n                                options={[\"В сервиза\", \"На магистралата\", \"В Тракия\"]}\r\n                                onOptionSelect={handleOptionSelect} // Passing event handler here\r\n                            />\r\n                        </div>\r\n                    </main>\r\n                }/>\r\n            <Footer/>\r\n        </>\r\n    );\r\n}\r\n*/"],"names":[],"mappings":"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"}},
    {"offset": {"line": 847, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}