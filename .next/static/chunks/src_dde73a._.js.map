{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://F%3A/12a_21/class%20Software%20Develompent/TeamProject/geoquest/src/app/FirebaseDB/firebase.config.js"],"sourcesContent":["import { getApps, initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n\r\n    apiKey: \"AIzaSyAvmVBXtxxbpsjLI0mSvEJOcsJLG_WbpM8\",\r\n    authDomain: \"geoquest-63591.firebaseapp.com\",\r\n    projectId: \"geoquest-63591\",\r\n    storageBucket: \"geoquest-63591.firebasestorage.app\",\r\n    messagingSenderId: \"571105147553\",\r\n    appId: \"1:571105147553:web:95ece43746755dd184cee0\",\r\n\r\n    /*\r\n    apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\r\n    authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID\r\n    */\r\n};\r\n\r\n// Initialize Firebase\r\nif (!getApps().length) {\r\n    initializeApp(firebaseConfig);\r\n}\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app); "],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAFA;AACA;AACA;;;;AAEA,wCAAwC;AACxC,mEAAmE;AACnE,MAAM,iBAAiB;IAEnB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;AAUX;AAEA,sBAAsB;AACtB,IAAI,CAAC,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,EAAE;IACnB,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE;AAClB;AAEA,MAAM,MAAM,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE;AACnB,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,sKAAA,CAAA,eAAY,AAAD,EAAE"}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file://F%3A/12a_21/class%20Software%20Develompent/TeamProject/geoquest/src/app/FirebaseDB/AuthContext.tsx"],"sourcesContent":["/*\r\nimport React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport {\r\n    createUserWithEmailAndPassword,\r\n    onAuthStateChanged,\r\n    signInWithEmailAndPassword,\r\n    signOut\r\n} from 'firebase/auth';\r\nimport { auth } from './firebase.config';\r\n\r\n// User data type interface\r\ninterface UserType {\r\n    email: string | null;\r\n    uid: string | null;\r\n}\r\n\r\n// Create auth context\r\nconst AuthContext = createContext({});\r\n\r\n// Make auth context available across the app by exporting it\r\nexport const useAuth = () => useContext<any>(AuthContext);\r\n\r\n// Create the auth context provider\r\nexport const AuthContextProvider = ({\r\n    children\r\n}: {\r\n    children: React.ReactNode;\r\n}) => {\r\n    // Define the constants for the user and loading state\r\n    const [user, setUser] = useState<UserType>({ email: null, uid: null });\r\n    const [loading, setLoading] = useState<Boolean>(true);\r\n\r\n    // Update the state depending on auth\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n            if (user) {\r\n                setUser({\r\n                    email: user.email,\r\n                    uid: user.uid\r\n                });\r\n            } else {\r\n                setUser({ email: null, uid: null });\r\n            }\r\n        });\r\n\r\n        setLoading(false);\r\n\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    // Sign up the user\r\n    const signUp = (email: string, password: string) => {\r\n        return createUserWithEmailAndPassword(auth, email, password);\r\n    };\r\n\r\n    // Login the user\r\n    const logIn = (email: string, password: string) => {\r\n        return signInWithEmailAndPassword(auth, email, password);\r\n    };\r\n\r\n    // Logout the user\r\n    const logOut = async () => {\r\n        setUser({ email: null, uid: null });\r\n        return await signOut(auth);\r\n    };\r\n\r\n    // Wrap the children with the context provider\r\n    return (\r\n        <AuthContext.Provider value={{ user, signUp, logIn, logOut }}>\r\n            {loading ? null : children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n*/\r\n\r\nimport { auth, db } from './firebase.config';\r\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, updateProfile } from 'firebase/auth';\r\nimport { setDoc, doc, collection, query, where, getDocs, Timestamp } from 'firebase/firestore'; // Import Firestore functions\r\nimport { getDoc } from \"firebase/firestore\";\r\n\r\nexport const registerWithEmail = async (email: string, password: string, username: string, nickname: string, role: string = \"user\") => {\r\n  const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n\r\n  // Update the profile with the username in Firebase Auth\r\n  await updateProfile(userCredential.user, { displayName: username });\r\n\r\n  // If the email is a specific admin email, assign the \"admin\" role\r\n  const isAdmin = email === \"petiopetkov20a@gmail.com\"; // Replace with your admin's email\r\n  const userRole = isAdmin ? \"admin\" : role; // Set role to \"admin\" if condition matches\r\n\r\n  // Save the user’s details in Firestore with the role (default to \"user\")\r\n  await setDoc(doc(db, 'users', userCredential.user.uid), {\r\n    username,\r\n    email,\r\n    createdAt: new Date(),\r\n    role: userRole, // Store the role (either \"user\" or \"admin\")\r\n  });\r\n\r\n  // Return the updated user with displayName\r\n  return userCredential.user;\r\n};\r\n\r\nexport const loginWithUsernameOrEmail = async (identifier: string, password: string) => {\r\n  let email = identifier;\r\n\r\n  // Check if the identifier is a username (not an email)\r\n  if (!identifier.includes('@')) {\r\n    // Query Firestore to find the email associated with the username\r\n    const usersRef = collection(db, 'users');\r\n    const q = query(usersRef, where('username', '==', identifier));\r\n    const querySnapshot = await getDocs(q);\r\n\r\n    if (querySnapshot.empty) {\r\n      throw new Error(\"Username not found\");\r\n    }\r\n\r\n    // Assuming username is unique, get the email from the first matched document\r\n    email = querySnapshot.docs[0].data().email;\r\n  }\r\n\r\n  // Proceed to login with the found email and provided password\r\n  return signInWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const logout = async () => {\r\n  try {\r\n    await signOut(auth);\r\n    console.log('User signed out');\r\n  } catch (error) {\r\n    console.error('Error signing out:', error);\r\n  }\r\n};\r\n\r\nexport const getUserRole = async (uid: string) => {\r\n  const userDocRef = doc(db, 'users', uid);\r\n  const docSnap = await getDoc(userDocRef);\r\n  \r\n  if (docSnap.exists()) {\r\n    return docSnap.data().role;  // Return the role (e.g., \"user\" or \"admin\")\r\n  } else {\r\n    throw new Error(\"User not found\");\r\n  }\r\n};\r\n\r\n\r\n\r\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;;;;;;AAEA;AACA;AACA,iVAAgG,6BAA6B;AAD7H;AAAA;AACA;AADA;AAAA;;;;;AAIO,MAAM,oBAAoB,OAAO,OAAe,UAAkB,UAAkB,UAAkB,OAAe,MAAM;IAChI,MAAM,iBAAiB,MAAM,CAAA,GAAA,qOAAA,CAAA,iCAA8B,AAAD,EAAE,iJAAA,CAAA,OAAI,EAAE,OAAO;IAEzE,wDAAwD;IACxD,MAAM,CAAA,GAAA,oNAAA,CAAA,gBAAa,AAAD,EAAE,eAAe,IAAI,EAAE;QAAE,aAAa;IAAS;IAEjE,kEAAkE;IAClE,MAAM,UAAU,UAAU,4BAA4B,kCAAkC;IACxF,MAAM,WAAW,UAAU,UAAU,MAAM,2CAA2C;IAEtF,yEAAyE;IACzE,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,iJAAA,CAAA,KAAE,EAAE,SAAS,eAAe,IAAI,CAAC,GAAG,GAAG;QACtD;QACA;QACA,WAAW,IAAI;QACf,MAAM;IACR;IAEA,2CAA2C;IAC3C,OAAO,eAAe,IAAI;AAC5B;AAEO,MAAM,2BAA2B,OAAO,YAAoB;IACjE,IAAI,QAAQ;IAEZ,uDAAuD;IACvD,IAAI,CAAC,WAAW,QAAQ,CAAC,MAAM;QAC7B,iEAAiE;QACjE,MAAM,WAAW,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,iJAAA,CAAA,KAAE,EAAE;QAChC,MAAM,IAAI,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,UAAU,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,YAAY,MAAM;QAClD,MAAM,gBAAgB,MAAM,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE;QAEpC,IAAI,cAAc,KAAK,EAAE;YACvB,MAAM,IAAI,MAAM;QAClB;QAEA,6EAA6E;QAC7E,QAAQ,cAAc,IAAI,CAAC,EAAE,CAAC,IAAI,GAAG,KAAK;IAC5C;IAEA,8DAA8D;IAC9D,OAAO,CAAA,GAAA,iOAAA,CAAA,6BAA0B,AAAD,EAAE,iJAAA,CAAA,OAAI,EAAE,OAAO;AACjD;AAEO,MAAM,SAAS;IACpB,IAAI;QACF,MAAM,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE,iJAAA,CAAA,OAAI;QAClB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sBAAsB;IACtC;AACF;AAEO,MAAM,cAAc,OAAO;IAChC,MAAM,aAAa,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,iJAAA,CAAA,KAAE,EAAE,SAAS;IACpC,MAAM,UAAU,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE;IAE7B,IAAI,QAAQ,MAAM,IAAI;QACpB,OAAO,QAAQ,IAAI,GAAG,IAAI,EAAG,4CAA4C;IAC3E,OAAO;QACL,MAAM,IAAI,MAAM;IAClB;AACF"}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file://F%3A/12a_21/class%20Software%20Develompent/TeamProject/geoquest/src/components/navbar.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { auth } from \"@/app/FirebaseDB/firebase.config\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nconst Navbar: React.FC = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [isDropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => setDropdownOpen(!isDropdownOpen);\r\n  const closeDropdown = () => setDropdownOpen(false);\r\n\r\n  const router = useRouter();\r\n\r\n  useEffect(() => \r\n  {\r\n    // Check if a user is logged in\r\n    const user = auth.currentUser;\r\n    setIsLoggedIn(user ? true : false); // If user exists, they're logged in\r\n  }, []); // Empty dependency array ensures this runs only once, when the component is mounted\r\n\r\n  // Check if the user is logged in using Firebase auth\r\n  useEffect(() => \r\n  {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setIsLoggedIn(user ? true : false); // If user is logged in, set isLoggedIn to true\r\n    });\r\n\r\n    return () => unsubscribe(); // Cleanup on unmount\r\n  }, []);\r\n\r\n  // Function to log out the user\r\n  const handleLogout = async () => {\r\n    try {\r\n      await auth.signOut(); // Sign out the user\r\n      setIsLoggedIn(false); // Update the state\r\n      router.push(\"/login\"); // Redirect to login page (optional)\r\n      console.log(\"Signed out\");\r\n    } catch (error) {\r\n      console.error(\"Error signing out: \", error); // Handle errors\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <nav className=\"bg-[#457B9D] text-white px-6 py-4\">\r\n      <div className=\"container mx-auto flex justify-between items-center\">\r\n\r\n        {/* Logo */}\r\n        <span className=\"text-2xl font-bold\">\r\n          <Link href=\"#\">\r\n            <img className=\"max-w-14\" src=\"./geoquest_logo.png\" alt=\"GeoQuest\"/>\r\n          </Link>\r\n        </span>\r\n\r\n        {/* Navigation Links */}\r\n        <div className=\"flex space-x-36\">\r\n          <Link href=\"/game\" className=\"text-xl font-bold hover:underline\"> Играй </Link>\r\n          <Link href=\"/leaderboard\" className=\"text-xl font-bold hover:underline\"> Класация </Link>\r\n          <Link href=\"/about-us\" className=\"text-xl font-bold hover:underline\"> За нас </Link>\r\n        </div>\r\n\r\n        {/* Profile Dropdown */}\r\n        <div className=\"relative\">\r\n          <button\r\n            onClick={toggleDropdown}\r\n            className=\"flex items-center focus:outline-none transition duration-300\"\r\n          >\r\n\r\n          <Image\r\n            src={isLoggedIn ? \"/user_icon.png\" : \"/navbar_unlogged_menu.png\"}\r\n            alt=\"Account button\"\r\n            width={56}\r\n            height={56}\r\n            className=\"max-w-10\"/>\r\n\r\n\r\n{/*\r\n            {\r\n              isLoggedIn ? <Image\r\n                              src=\"/user_icon.png\"\r\n                              alt=\"Account button\"\r\n                              width={56}\r\n                              height={56}\r\n                              className=\"max-w-10\"/>\r\n                          : \r\n                          <Image\r\n                            src=\"/navbar_unlogged_icon.png\"\r\n                            alt=\"Sign in/Log in button\"\r\n                            width={56}\r\n                            height={56}\r\n                            className=\"max-w-10\"/>\r\n            }\r\n            */}\r\n          </button>\r\n\r\n          {isDropdownOpen && (\r\n            <div\r\n              className=\"absolute right-0 mt-2 w-48 bg-[#FFF9F5] text-[#1D3557] rounded-lg shadow-lg overflow-hidden z-10\"\r\n              onMouseLeave={closeDropdown}\r\n            >\r\n\r\n            {isLoggedIn ? \r\n              (<button\r\n                  onClick={handleLogout}\r\n                  className=\"block w-full text-left px-4 py-3 text-lg font-semibold hover:bg-[#A8DADC] hover:text-[#457B9D] transition duration-300\"\r\n                >\r\n                  Изход\r\n                </button>) \r\n              : \r\n              (<div>\r\n                  <Link\r\n                    href=\"/login\"\r\n                    className=\"block px-4 py-3 text-lg font-semibold hover:bg-[#A8DADC] hover:text-[#457B9D] transition duration-300\"\r\n                  >\r\n                    Вход\r\n                  </Link>\r\n\r\n                  <Link\r\n                    href=\"/register\"\r\n                    className=\"block px-4 py-3 text-lg font-semibold hover:bg-[#A8DADC] hover:text-[#457B9D] transition duration-300\"\r\n                  >\r\n                    Регистрация\r\n                  </Link>\r\n                </div>\r\n              )}\r\n\r\n\r\n              {/*\r\n            {\r\n              isLoggedIn ? <div\r\n                              className=\"absolute right-0 mt-2 w-48 bg-[#FFF9F5] text-[#1D3557] rounded-lg shadow-lg overflow-hidden z-10\"\r\n                              onMouseLeave={closeDropdown}\r\n                            >\r\n                              <button\r\n                                onClick={handleLogout}\r\n                                className=\"block w-full text-left px-4 py-3 text-lg font-semibold hover:bg-[#A8DADC] hover:text-[#457B9D] transition duration-300\"\r\n                              >\r\n                                Изход\r\n                              </button>\r\n                            </div> \r\n                            : \r\n                            <div>\r\n                              <Link\r\n                                href=\"/login\"\r\n                                className=\"block px-4 py-3 text-lg font-semibold hover:bg-[#A8DADC] hover:text-[#457B9D] transition duration-300\"\r\n                              >\r\n                                Вход\r\n                              </Link>\r\n\r\n                              <Link\r\n                                href=\"/register\"\r\n                                className=\"block px-4 py-3 text-lg font-semibold hover:bg-[#A8DADC] hover:text-[#457B9D] transition duration-300\"\r\n                              >\r\n                                Регистрация\r\n                              </Link>\r\n                            </div>\r\n            }\r\n          */}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\n/*\r\n\"use client\"\r\n\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Navbar: React.FC = () => {\r\n  return (\r\n      <nav className=\"bg-[#457B9D] text-white px-6 py-4\">\r\n        \r\n        <div className=\"container mx-auto flex justify-between items-center\">\r\n\r\n          <span className=\"text-2xl font-bold\">\r\n            <Link href=\"#\">\r\n              <img className=\"max-w-14\" src=\"./logo.png\" alt=\"GeoQuest\" />\r\n            </Link>\r\n          </span>\r\n\r\n          <div className=\"flex space-x-36\">\r\n            <Link href=\"/game\" className=\"text-xl font-bold hover:underline\"> Играй </Link> \r\n            <Link href=\"/leaderboard\" className=\"text-xl font-bold hover:underline\"> Класация </Link> \r\n            <Link href=\"/about-us\" className=\"text-xl font-bold hover:underline\"> За нас </Link> \r\n          </div>\r\n\r\n          <div className=\"flex justify-end\">\r\n            <Link href=\"/login\" className=\"text-xl font-bold hover:underline p-5\"> Влез </Link> \r\n            <Link href=\"/register\" className=\"text-xl font-bold hover:underline p-5\"> Регистрирай се </Link> \r\n          </div>\r\n\r\n          <div>\r\n            <Link href=\"#\"> \r\n              <Image className=\"max-w-14\" src=\"/user.png\" alt=\"Account button\" width={56} height={20}/>\r\n            </Link>\r\n          </div>\r\n\r\n        </div>\r\n      </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n*/"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;;;AANA;;;;;;AAQA,MAAM,SAAmB;;IACvB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,gBAAgB,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,MAAM,iBAAiB,IAAM,gBAAgB,CAAC;IAC9C,MAAM,gBAAgB,IAAM,gBAAgB;IAE5C,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;4BAAE;YAER,+BAA+B;YAC/B,MAAM,OAAO,iJAAA,CAAA,OAAI,CAAC,WAAW;YAC7B,cAAc,OAAO,OAAO,QAAQ,oCAAoC;QAC1E;2BAAG,EAAE,GAAG,oFAAoF;IAE5F,qDAAqD;IACrD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;4BAAE;YAER,MAAM,cAAc,iJAAA,CAAA,OAAI,CAAC,kBAAkB;gDAAC,CAAC;oBAC3C,cAAc,OAAO,OAAO,QAAQ,+CAA+C;gBACrF;;YAEA;oCAAO,IAAM;oCAAe,qBAAqB;QACnD;2BAAG,EAAE;IAEL,+BAA+B;IAC/B,MAAM,eAAe;QACnB,IAAI;YACF,MAAM,iJAAA,CAAA,OAAI,CAAC,OAAO,IAAI,oBAAoB;YAC1C,cAAc,QAAQ,mBAAmB;YACzC,OAAO,IAAI,CAAC,WAAW,oCAAoC;YAC3D,QAAQ,GAAG,CAAC;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,uBAAuB,QAAQ,gBAAgB;QAC/D;IACF;IAGA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BAGb,6LAAC;oBAAK,WAAU;8BACd,cAAA,6LAAC,+HAAA,CAAA,UAAI;wBAAC,MAAK;kCACT,cAAA,6LAAC;4BAAI,WAAU;4BAAW,KAAI;4BAAsB,KAAI;;;;;;;;;;;;;;;;8BAK5D,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,+HAAA,CAAA,UAAI;4BAAC,MAAK;4BAAQ,WAAU;sCAAoC;;;;;;sCACjE,6LAAC,+HAAA,CAAA,UAAI;4BAAC,MAAK;4BAAe,WAAU;sCAAoC;;;;;;sCACxE,6LAAC,+HAAA,CAAA,UAAI;4BAAC,MAAK;4BAAY,WAAU;sCAAoC;;;;;;;;;;;;8BAIvE,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BACC,SAAS;4BACT,WAAU;sCAGZ,cAAA,6LAAC,gIAAA,CAAA,UAAK;gCACJ,KAAK,aAAa,mBAAmB;gCACrC,KAAI;gCACJ,OAAO;gCACP,QAAQ;gCACR,WAAU;;;;;;;;;;;wBAsBX,gCACC,6LAAC;4BACC,WAAU;4BACV,cAAc;sCAGf,2BACE,6LAAC;gCACE,SAAS;gCACT,WAAU;0CACX;;;;;qDAIF,6LAAC;;kDACE,6LAAC,+HAAA,CAAA,UAAI;wCACH,MAAK;wCACL,WAAU;kDACX;;;;;;kDAID,6LAAC,+HAAA,CAAA,UAAI;wCACH,MAAK;wCACL,WAAU;kDACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CnB;GAhKM;;QAOW,qIAAA,CAAA,YAAS;;;KAPpB;uCAkKS;;;;;;CAEf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA"}},
    {"offset": {"line": 454, "column": 3}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 460, "column": 0}, "map": {"version":3,"sources":["file://F%3A/12a_21/class%20Software%20Develompent/TeamProject/geoquest/src/components/main-content.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ninterface CustomComponentProps {\r\n  content: React.ReactNode; \r\n}\r\n\r\nconst MainContent: React.FC<CustomComponentProps> = ({ content }) => {\r\n  return (\r\n    <main className=\"flex flex-col items-center justify-center flex-grow bg-gray-100 py-20\">\r\n      {content}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default MainContent;"],"names":[],"mappings":";;;;;AAMA,MAAM,cAA8C,CAAC,EAAE,OAAO,EAAE;IAC9D,qBACE,6LAAC;QAAK,WAAU;kBACb;;;;;;AAGP;KANM;uCAQS"}},
    {"offset": {"line": 482, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 488, "column": 0}, "map": {"version":3,"sources":["file://F%3A/12a_21/class%20Software%20Develompent/TeamProject/geoquest/src/components/footer.tsx"],"sourcesContent":["export default function Footer() {\r\n    return (\r\n      <footer className=\"bg-[#457B9D] text-white text-center p-4\">\r\n        ©Всички права запазени\r\n      </footer>\r\n    );\r\n  }"],"names":[],"mappings":";;;;;AAAe,SAAS;IACpB,qBACE,6LAAC;QAAO,WAAU;kBAA0C;;;;;;AAIhE;KANsB"}},
    {"offset": {"line": 509, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 515, "column": 0}, "map": {"version":3,"sources":["file://F%3A/12a_21/class%20Software%20Develompent/TeamProject/geoquest/src/app/login/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport { loginWithUsernameOrEmail } from \"../FirebaseDB/AuthContext\";\r\n\r\nimport { useRouter } from \"next/navigation\";\r\nimport Navbar from \"@/components/navbar\";\r\nimport MainContent from \"@/components/main-content\";\r\nimport Footer from \"@/components/footer\";\r\n\r\nexport default function LoginForm() {\r\n  const [identifier, setIdentifier] = useState(\"\"); \r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const router = useRouter();\r\n\r\n  const handleLogin = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!identifier) {\r\n      setError(\"Please enter your username or email.\");\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      setError(\"Please enter your password.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await loginWithUsernameOrEmail(identifier, password);\r\n\r\n      console.log(\"logged in\");\r\n      router.push(\"/game\");\r\n    } \r\n    catch (error) {\r\n      if (error instanceof Error) {\r\n        setError(error.message);\r\n      } \r\n      else {\r\n        setError(\"An unknown error occurred.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  \r\n  return (\r\n    <>\r\n        <Navbar/>\r\n        <MainContent \r\n            content={\r\n                <div className=\"bg-gray-100 p-6 rounded-md shadow-md w-full max-w-md mx-auto\">\r\n                    <h2 className=\"text-center text-xl font-bold mb-6\">Влизане в профил</h2>\r\n\r\n                    <form>\r\n                        {error && <p className=\"error-message\">{error}</p>}\r\n\r\n                        <div className=\"mb-4\">\r\n                            <label htmlFor=\"usernameOrEmail\" className=\"block mb-1 text-sm font-medium\">Потребителско име или имейл</label>\r\n                            \r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"usernameOrEmail\"\r\n                                className=\"w-full border border-gray-300 rounded-md p-2\"\r\n                                placeholder=\"Въведете потребителско име или имейл\"\r\n\r\n                                value={identifier}\r\n                                onChange={(e) => setIdentifier(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"mb-4 relative\">\r\n                            <label htmlFor=\"password\" className=\"block mb-1 text-sm font-medium\">Парола</label>\r\n                            \r\n                            <input\r\n                                type={passwordVisible ? 'text' : 'password'}\r\n                                id=\"password\"\r\n                                className=\"w-full border border-gray-300 rounded-md p-2\"\r\n                                placeholder=\"Въведете парола\"\r\n\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-500\"\r\n                                onClick={() => setPasswordVisible(!passwordVisible)}\r\n                            >\r\n                                👁️\r\n                            </button>\r\n                        </div>\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"w-full bg-blue-600 text-white rounded-md p-2 font-medium hover:bg-blue-700 transition\"\r\n                            onClick={handleLogin}\r\n                            >\r\n                            Вход\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            }/>\r\n        <Footer/>\r\n    </>    \r\n  );\r\n}\r\n\r\n/*\r\nimport Navbar from \"@/components/navbar\";\r\nimport MainContent from \"@/components/main-content\";\r\nimport Footer from \"@/components/footer\";\r\nimport GameQuestion from \"@/components/game-question\";\r\nimport { useState } from \"react\";\r\nimport { Auth } from \"firebase/auth\";\r\n\r\nexport default function LoginForm() {\r\n    const [passwordVisible, setPasswordVisible] = useState(false);\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <Navbar/>\r\n            <MainContent \r\n                content={\r\n                    <div className=\"bg-gray-100 p-6 rounded-md shadow-md w-full max-w-md mx-auto\">\r\n                        <h2 className=\"text-center text-xl font-bold mb-6\">Влизане в профил</h2>\r\n\r\n                        <form>\r\n                            <div className=\"mb-4\">\r\n                            <label htmlFor=\"usernameOrEmail\" className=\"block mb-1 text-sm font-medium\">Потребителско име или имейл</label>\r\n                            \r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"usernameOrEmail\"\r\n                                className=\"w-full border border-gray-300 rounded-md p-2\"\r\n                                placeholder=\"Въведете потребителско име или имейл\"\r\n                            />\r\n                            </div>\r\n\r\n                            <div className=\"mb-4 relative\">\r\n                            <label htmlFor=\"password\" className=\"block mb-1 text-sm font-medium\">Парола</label>\r\n                            \r\n                            <input\r\n                                type={passwordVisible ? 'text' : 'password'}\r\n                                id=\"password\"\r\n                                className=\"w-full border border-gray-300 rounded-md p-2\"\r\n                                placeholder=\"Въведете парола\"\r\n                            />\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-500\"\r\n                                onClick={() => setPasswordVisible(!passwordVisible)}\r\n                            >\r\n                                👁️\r\n                            </button>\r\n                            </div>\r\n\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"w-full bg-blue-600 text-white rounded-md p-2 font-medium hover:bg-blue-700 transition\"\r\n                                >\r\n                                Вход\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                }/>\r\n            <Footer/>\r\n        </>\r\n    );\r\n}\r\n*/"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AACA;AACA;AACA;;;AATA;;;;;;;AAWe,SAAS;;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,cAAc,OAAO;QACzB,EAAE,cAAc;QAEhB,IAAI,CAAC,YAAY;YACf,SAAS;YACT;QACF;QAEA,IAAI,CAAC,UAAU;YACb,SAAS;YACT;QACF;QAEA,IAAI;YACF,MAAM,CAAA,GAAA,2IAAA,CAAA,2BAAwB,AAAD,EAAE,YAAY;YAE3C,QAAQ,GAAG,CAAC;YACZ,OAAO,IAAI,CAAC;QACd,EACA,OAAO,OAAO;YACZ,IAAI,iBAAiB,OAAO;gBAC1B,SAAS,MAAM,OAAO;YACxB,OACK;gBACH,SAAS;YACX;QACF;IACF;IAGA,qBACE;;0BACI,6LAAC,+HAAA,CAAA,UAAM;;;;;0BACP,6LAAC,wIAAA,CAAA,UAAW;gBACR,uBACI,6LAAC;oBAAI,WAAU;;sCACX,6LAAC;4BAAG,WAAU;sCAAqC;;;;;;sCAEnD,6LAAC;;gCACI,uBAAS,6LAAC;oCAAE,WAAU;8CAAiB;;;;;;8CAExC,6LAAC;oCAAI,WAAU;;sDACX,6LAAC;4CAAM,SAAQ;4CAAkB,WAAU;sDAAiC;;;;;;sDAE5E,6LAAC;4CACG,MAAK;4CACL,IAAG;4CACH,WAAU;4CACV,aAAY;4CAEZ,OAAO;4CACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;8CAIrD,6LAAC;oCAAI,WAAU;;sDACX,6LAAC;4CAAM,SAAQ;4CAAW,WAAU;sDAAiC;;;;;;sDAErE,6LAAC;4CACG,MAAM,kBAAkB,SAAS;4CACjC,IAAG;4CACH,WAAU;4CACV,aAAY;4CAEZ,OAAO;4CACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;sDAE/C,6LAAC;4CACG,MAAK;4CACL,WAAU;4CACV,SAAS,IAAM,mBAAmB,CAAC;sDACtC;;;;;;;;;;;;8CAKL,6LAAC;oCACG,MAAK;oCACL,WAAU;oCACV,SAAS;8CACR;;;;;;;;;;;;;;;;;;;;;;;0BAMrB,6LAAC,+HAAA,CAAA,UAAM;;;;;;;AAGf,EAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;GAnKwB;;QAMP,qIAAA,CAAA,YAAS;;;KANF"}},
    {"offset": {"line": 772, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}